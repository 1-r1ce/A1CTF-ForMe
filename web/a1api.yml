openapi: '3.0.3'
info:
  title: A1CTF API
  version: '1.0'
servers:
  - url: http://localhost:7777/
paths:
  /api/auth/login:
    post:
      tags: [auth]
      operationId: userLogin
      summary: Login
      responses:
        '200':
          description: OK
        '404':
          description: User Not Found
        '401':
          description: Password Incorrect
        '500':
          description: Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
  /api/auth/register:
    post:
      tags: [auth]
      operationId: userRegister
      summary: Register
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
  /api/admin/challenge/create:
    post:
      tags: [admin]
      operationId: createChallenge
      summary: Create a new challenge
      description: Create a new challenge with attachments, container configurations and judge configuration.
      responses:
        '200':
          description: Challenge created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  challenge_id:
                    type: integer
                  create_at:
                    type: string
                    format: date-time
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminChallengeConfig'
  /api/admin/challenge/{challenge_id}:
    get:
      tags: [admin]
      operationId: getChallengeInfo
      summary: Get challenge info
      responses:
        '200':
          description: Challenge info get
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    $ref: '#/components/schemas/AdminChallengeConfig'
                required:
                  - code
                  - data
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      parameters:
        - name: challenge_id
          in: path
          required: true
          description: The ID of the challenge to retrieve
          schema:
            type: integer
    delete:
      tags: [admin]
      operationId: deleteChallenge
      summary: Delete a exist challenge
      responses:
        '200':
          description: Challenge delete successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
        '404':
          description: Challenge not found
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      parameters:
        - name: challenge_id
          in: path
          required: true
          description: The ID of the challenge to retrieve
          schema:
            type: integer
    put:
      tags: [admin]
      operationId: updateChallenge
      summary: Update a exist challenge
      responses:
        '200':
          description: Challenge update successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
        '404':
          description: Challenge not found
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminChallengeConfig'
      parameters:
        - name: challenge_id
          in: path
          required: true
          description: The ID of the challenge to retrieve
          schema:
            type: integer
  /api/admin/challenge/list:
    post:
      tags: [admin]
      operationId: listChallenge
      summary: List challenges
      responses:
        '200':
          description: Challenge listed
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AdminChallengeSimpleInfo'
                required:
                  - code
                  - data
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                size:
                  type: integer
                offset:
                  type: integer
                category:
                  $ref: '#/components/schemas/ChallengeCategory'
              required:
                - size
                - offset
  /api/admin/challenge/search:
    post:
      tags: [admin]
      operationId: searchChallenges
      summary: Search a challenge
      responses:
        '200':
          description: Matched challenge
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        challenge_id:
                          type: integer
                        name:
                          type: string
                        category:
                          $ref: '#/components/schemas/ChallengeCategory'
                        create_time:
                          type: string
                          format: date-time
                      required:
                        - challenge_id
                        - name
                        - category
                        - create_time
                required:
                  - code
                  - data
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                keyword:
                  type: string
              required:
                - keyword
  /api/admin/game/list:
    post:
      tags: [admin]
      operationId: listGames
      summary: List games
      responses:
        '200':
          description: game listed
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/GameSimpleInfo'
                required:
                  - code
                  - data
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                size:
                  type: integer
                offset:
                  type: integer
              required:
                - size
  /api/admin/game/create:
    post:
      tags: [admin]
      operationId: createGame
      summary: Create a new game
      description: Create a new game.
      responses:
        '200':
          description: Game created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  game_id:
                    type: integer
                  create_at:
                    type: string
                    format: date-time
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminFullGameInfo'
  /api/admin/game/{game_id}:
    get:
      tags: [admin]
      operationId: getGameInfo
      summary: Get a game info
      description: Get a game info
      responses:
        '200':
          description: Game get successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    $ref: '#/components/schemas/AdminFullGameInfo'
                required:
                  - code
                  - data
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      parameters:
        - name: game_id
          in: path
          required: true
          description: The ID of the game to retrieve
          schema:
            type: integer
    put:
      tags: [admin]
      operationId: updateGame
      summary: Update a game
      description: Update a game
      responses:
        '200':
          description: Game update successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                required:
                  - code
                  - data
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/AdminFullGameInfo'
      parameters:
        - name: game_id
          in: path
          required: true
          description: The ID of the game to retrieve
          schema:
            type: integer
  /api/admin/game/{game_id}/challenge/{challenge_id}:
    put:
      tags: [admin]
      operationId: addGameChallenge
      summary: Add a challenge to a game
      description: Add a challenge to a game
      responses:
        '200':
          description: AdminDetailGameChallenge add successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    $ref: '#/components/schemas/AdminDetailGameChallenge'
                required:
                  - code
                  - data
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      parameters:
        - name: game_id
          in: path
          required: true
          description: The ID of the game to add
          schema:
            type: integer
        - name: challenge_id
          in: path
          required: true
          description: The ID of the challenge to add
          schema:
            type: integer
  /api/game/list:
    get:
      tags: [user]
      operationId: userListGames
      summary: List games
      responses:
        '200':
          description: game listed
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/GameSimpleInfo'
                required:
                  - code
                  - data
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/game/{game_id}:
    get:
      tags: [user]
      operationId: userGetGameInfoWithTeamInfo
      summary: Get a game info with team info
      description: Get a game info with team info
      responses:
        '200':
          description: Game get successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    $ref: '#/components/schemas/UserFullGameInfo'
                required:
                  - code
                  - data
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      parameters:
        - name: game_id
          in: path
          required: true
          description: The ID of the game to retrieve
          schema:
            type: integer
  /api/game/{game_id}/challenges:
    get:
      tags: [user]
      operationId: userGetGameChallenges
      summary: Get game challenges
      description: Get game challenges
      responses:
        '200':
          description: Game challenges get successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserSimpleGameChallenge'
                required:
                  - code
                  - data
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      parameters:
        - name: game_id
          in: path
          required: true
          description: The ID of the game to retrieve
          schema:
            type: integer
  /api/game/{game_id}/challenge/{challenge_id}:
    get:
      tags: [user]
      operationId: userGetGameChallenge
      summary: Get a game challenge
      description: Get a game challenge
      responses:
        '200':
          description: Game challenge get successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    $ref: '#/components/schemas/UserDetailGameChallenge'
                required:
                  - code
                  - data
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      parameters:
        - name: game_id
          in: path
          required: true
          description: The ID of the game to retrieve
          schema:
            type: integer
        - name: challenge_id
          in: path
          required: true
          description: The ID of the challenge to retrieve
          schema:
            type: integer
  /api/game/{game_id}/notices:
    get:
      tags: [user]
      operationId: userGetGameNotices
      summary: Get game notices
      description: Get game notices
      responses:
        '200':
          description: Game notices get successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/GameNotice'
                required:
                  - code
                  - data
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      parameters:
        - name: game_id
          in: path
          required: true
          description: The ID of the game to retrieve
          schema:
            type: integer
  /api/game/{game_id}/createTeam:
    post:
      tags: [user]
      operationId: userGameCreateTeam
      summary: Create a team for a game
      description: Create a team for a game
      responses:
        '200':
          description: Game created
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/GameNotice'
                required:
                  - code
                  - data
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      requestBody:
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/CreateGameTeamPayload'
      parameters:
        - name: game_id
          in: path
          required: true
          description: The ID of the game to retrieve
          schema:
            type: integer
  /api/game/{game_id}/container/{challenge_id}:
    post:
      tags: [user]
      operationId: UserCreateContainerForAChallenge
      summary: Create a container for a challenge
      description: Create a container for a challenge
      responses:
        '200':
          description: Container created
        '400':
          description: Bad request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      parameters:
        - name: game_id
          in: path
          required: true
          description: The ID of the game to retrieve
          schema:
            type: integer
        - name: challenge_id
          in: path
          required: true
          description: The ID of the challenge to retrieve
          schema:
            type: integer
components:
  schemas:
    UserLogin:
      description: User login form
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        captcha:
          type: string
      required:
        - username
        - password
    UserRegister:
      description: User register form
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        captcha:
          type: string
        email:
          type: string
      required:
        - email
        - password
        - username
    AttachmentType:
      type: string
      enum:
        - "STATICFILE"
        - "DYNAMICFILE"
        - "REMOTEFILE"
      description: |
        Type of the attachment:
        - STATICFILE: Static file stored on server
        - DYNAMICFILE: Dynamically generated file
        - REMOTEFILE: File hosted on external server
      example: "STATICFILE"
    Attachment:
      type: object
      properties:
        attach_hash:
          type: string
          nullable: true
        attach_name:
          type: string
        attach_type:
          $ref: '#/components/schemas/AttachmentType'
        attach_url:
          type: string
        generate_script:
          type: string
          nullable: true
      required:
        - attach_name
        - attach_type
        - attach_url
    ExposePort:
      type: object
      properties:
        name:
          type: string
        port:
          type: integer
      required:
        - name
        - port
    Container:
      type: object
      properties:
        command:
          type: string
          nullable: true
        env:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentItem'
        expose_ports:
          type: array
          items:
            $ref: '#/components/schemas/ExposePort'
        image:
          type: string
        name:
          type: string
        cpu_limit:
          type: integer
        memory_limit:
          type: integer
        storage_limit:
          type: integer
      required:
        - expose_ports
        - image
        - name
    JudgeType:
      type: string
      enum:
        - DYNAMIC
        - SCRIPT
    JudgeConfig:
      type: object
      properties:
        flag_template:
          type: string
        judge_script:
          type: string
          nullable: true
        judge_type:
          $ref: '#/components/schemas/JudgeType'
      required:
        - flag_template
        - judge_type
    ChallengeCategory:
      type: string
      enum:
        - MISC
        - CRYPTO
        - PWN
        - WEB
        - REVERSE
        - FORENSICS
        - HARDWARE
        - MOBILE
        - PPC
        - AI
        - PENTENT
        - OSINT
    EnvironmentItem:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      required:
        - name
        - value
    AdminChallengeSimpleInfo:
      type: object
      properties:
        challenge_id:
          type: integer
        name:
          type: string
        description:
          type: string
        category:
          $ref: '#/components/schemas/ChallengeCategory'
        create_time:
          type: string
          format: date-time
      required:
        - challenge_id
        - name
        - description
        - category
        - create_time
    AdminChallengeConfig:
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        category:
          $ref: '#/components/schemas/ChallengeCategory'
        challenge_id:
          type: integer
        container_config:
          type: array
          items:
            $ref: '#/components/schemas/Container'
        create_time:
          type: string
          format: date-time
        description:
          type: string
        judge_config:
          $ref: '#/components/schemas/JudgeConfig'
        name:
          type: string
        type_:
          type: integer
      required:
        - name
        - description
        - category
        - container_config
        - judge_config
    ErrorMessage:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      required:
        - code
        - message
    GameStage:
      type: object
      properties:
        stage_name:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
      required:
        - stage_name
        - start_time
        - end_time
    AdminDetailGameChallenge:
      type: object
      properties:
        challenge_id:
          type: integer
        challenge_name:
          type: string
        total_score:
          type: number
          format: double
        cur_score:
          type: number
          format: double
        hints:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              create_time:
                type: string
                format: date-time
              visible:
                type: boolean
            required:
              - content
              - create_time
              - visible
        belong_stage:
          type: string
        solve_count:
          type: number
        visible:
          type: boolean
        category:
          $ref: '#/components/schemas/ChallengeCategory'
        judge_config:
          $ref: '#/components/schemas/JudgeConfig'
      required:
        - challenge_id
        - challenge_name
        - total_score
        - cur_score
    AddGameChallengePayload:
      type: object
      properties:
        challenge_id:
          type: integer
        game_id:
          type: integer
      required:
        - challenge_id
        - game_id
    AdminFullGameInfo:
      type: object
      properties:
        game_id:
          type: integer
          format: int64
        name:
          type: string
        summary:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        poster:
          type: string
          nullable: true
        invite_code:
          type: string
          nullable: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        practice_mode:
          type: boolean
        team_number_limit:
          type: integer
        container_number_limit:
          type: integer
        require_wp:
          type: boolean
        wp_expire_time:
          type: string
          format: date-time
        visible:
          type: boolean
        stages:
          type: array
          items:
            $ref: '#/components/schemas/GameStage'
        challenges:
          type: array
          items:
            $ref: '#/components/schemas/AdminDetailGameChallenge'
      required:
        - game_id
        - name
        - start_time
        - end_time
        - practice_mode
        - team_number_limit
        - container_number_limit
        - require_wp
        - wp_expire_time
        - stages
        - visible
    GameSimpleInfo:
      type: object
      properties:
        game_id:
          type: integer
          format: int64
        name:
          type: string
        summary:
          type: string
          nullable: true
        poster:
          type: string
          nullable: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        visible:
          type: boolean
      required:
        - game_id
        - name
        - start_time
        - end_time
        - summary
        - visible
    SolveRecord:
      type: object
      properties:
        user_id:
          type: string
        game_id:
          type: integer
        solve_time:
          type: string
          format: date-time
        challenge_id:
          type: integer
        score:
          type: number
          format: float
        solve_rank:
          type: integer
      required:
        - user_id
        - game_id
        - solve_time
        - challenge_id
        - score
        - solve_rank
    UserSimpleGameChallenge:
      type: object
      properties:
        challenge_id:
          type: integer
        challenge_name:
          type: string
        total_score:
          type: number
          format: double
        cur_score:
          type: number
          format: double
        belong_stage:
          type: string
        solve_count:
          type: number
        category:
          $ref: '#/components/schemas/ChallengeCategory'
      required:
        - challenge_id
        - challenge_name
        - total_score
        - cur_score
    ChallengeContainerType:
      type: string
      enum:
        - DYNAMIC_CONTAINER
        - STATIC_CONTAINER
        - NO_CONTAINER
    UserAttachmentConfig:
      type: object
      properties:
        attach_name:
          type: string
          description: The name of the attachment
          example: "example.pdf"
        attach_type:
          $ref: '#/components/schemas/AttachmentType'
        attach_url:
          type: string
          nullable: true
          description: URL of the attachment (if applicable)
          example: "https://example.com/files/example.pdf"
          x-omitempty: true
        attach_hash:
          type: string
          nullable: true
          description: Hash of the attachment content
          example: "a1b2c3d4e5f6"
          x-omitempty: true
        download_hash:
          type: string
          nullable: true
          description: Unique hash for download authorization
          example: "d4e5f6a1b2c3"
          x-omitempty: true
      required:
        - attach_name
        - attach_type
    UserDetailGameChallenge:
      type: object
      properties:
        challenge_id:
          type: integer
        challenge_name:
          type: string
        description:
          type: string
        total_score:
          type: number
          format: double
        cur_score:
          type: number
          format: double
        hints:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              create_time:
                type: string
                format: date-time
              visible:
                type: boolean
            required:
              - content
              - create_time
              - visible
        belong_stage:
          type: string
        solve_count:
          type: number
        category:
          $ref: '#/components/schemas/ChallengeCategory'
        container_type:
          $ref: '#/components/schemas/ChallengeContainerType'
        containers:
          type: array
          items:
            $ref: '#/components/schemas/ExposePortInfo'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/UserAttachmentConfig'
      required:
        - challenge_id
        - challenge_name
        - total_score
        - cur_score
    ParticipationStatus:
      type: string
      enum:
        - UnRegistered
        - Pending
        - Approved
        - Rejected
        - Participated
        - Banned
    UserTeamInfo:
      type: object
      properties:
        team_id:
          type: integer
          format: int64
        game_id:
          type: integer
          format: int64
        team_name:
          type: string
        team_avatar:
          type: string
          nullable: true
        team_slogan:
          type: string
          nullable: true
        team_description:
          type: string
          nullable: true
        team_members:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        team_score:
          type: number
          format: double
        team_hash:
          type: string
        invite_code:
          type: string
          nullable: true
        team_status:
          $ref: '#/components/schemas/ParticipationStatus'
      required:
        - team_id
        - game_id
        - team_name
        - team_score
        - team_hash
        - team_status
    UserFullGameInfo:
      type: object
      properties:
        game_id:
          type: integer
          format: int64
        name:
          type: string
        summary:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        poster:
          type: string
          nullable: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        practice_mode:
          type: boolean
        team_number_limit:
          type: integer
        container_number_limit:
          type: integer
        require_wp:
          type: boolean
        wp_expire_time:
          type: string
          format: date-time
        visible:
          type: boolean
        stages:
          type: array
          items:
            $ref: '#/components/schemas/GameStage'
        team_status:
          $ref: '#/components/schemas/ParticipationStatus'
        team_info:
          $ref: '#/components/schemas/UserTeamInfo'
      required:
        - game_id
        - name
        - start_time
        - end_time
        - practice_mode
        - team_number_limit
        - container_number_limit
        - require_wp
        - wp_expire_time
        - stages
        - visible
        - team_status
    NoticeCategory:
      type: string
      enum:
        - FirstBlood
        - SecondBlood
        - ThirdBlood
        - NewChallenge
        - NewHint
        - NewAnnouncement
    GameNotice:
      type: object
      properties:
        notice_id:
          type: integer
          format: int64
        notice_category:
          $ref: '#/components/schemas/NoticeCategory'
        data:
          type: array
          items:
            type: string
        create_time:
          type: string
          format: date-time
      required:
        - notice_id
        - notice_category
        - data
        - create_time
    CreateGameTeamPayload:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        slogan:
          type: string
      required:
        - name
        - description
        - slogan
    ExposePortInfo:
      type: object
      properties:
        container_name:
          type: string
        close_time:
          type: string
          format: date-time
        container_ports:
          type: array
          items:
            type: object
            properties:
              port_name:
                type: string
              port:
                type: integer
              ip:
                type: string
            required:
              - port_name
              - port
              - ip
      required:
        - container_name
        - container_ports